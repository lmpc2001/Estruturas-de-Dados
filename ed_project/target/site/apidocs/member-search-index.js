memberSearchIndex = [{"p":"com.example.structures.adt","c":"UnorderListADT","l":"addAfter(T, T)","u":"addAfter(T,T)"},{"p":"com.example.structures.implementation.list","c":"UnorderedList","l":"addAfter(T, T)","u":"addAfter(T,T)"},{"p":"com.example.domain","c":"Player","l":"addBot(Bot)","u":"addBot(com.example.domain.Bot)"},{"p":"com.example.structures.adt","c":"GraphADT","l":"addEdge(T, T)","u":"addEdge(T,T)"},{"p":"com.example.structures.implementation.network","c":"Graph","l":"addEdge(T, T)","u":"addEdge(T,T)"},{"p":"com.example.structures.adt","c":"NetworkADT","l":"addEdge(T, T, double)","u":"addEdge(T,T,double)"},{"p":"com.example.structures.implementation.network","c":"Network","l":"addEdge(T, T, double)","u":"addEdge(T,T,double)"},{"p":"com.example.domain","c":"Game","l":"addPlayer(Player)","u":"addPlayer(com.example.domain.Player)"},{"p":"com.example.structures.adt","c":"UnorderListADT","l":"addToFront(T)"},{"p":"com.example.structures.implementation.list","c":"UnorderedList","l":"addToFront(T)"},{"p":"com.example.structures.adt","c":"UnorderListADT","l":"addToRear(T)"},{"p":"com.example.structures.implementation.list","c":"UnorderedList","l":"addToRear(T)"},{"p":"com.example.structures.adt","c":"GraphADT","l":"addVertex(T)"},{"p":"com.example.structures.implementation.network","c":"Graph","l":"addVertex(T)"},{"p":"com.example.structures.implementation.network","c":"Network","l":"addVertex(T)"},{"p":"com.example.structures.implementation.network","c":"Graph","l":"adjMatrix"},{"p":"com.example","c":"App","l":"App()","u":"%3Cinit%3E()"},{"p":"com.example.structures.implementation.list","c":"ArrayList","l":"ArrayList()","u":"%3Cinit%3E()"},{"p":"com.example.structures.implementation.list","c":"ArrayList","l":"ArrayList(int)","u":"%3Cinit%3E(int)"},{"p":"com.example.domain","c":"Bot.Strategy","l":"Avoid_Obstacles"},{"p":"com.example.structures.implementation.list","c":"ArrayList.BaseIterator","l":"BaseIterator()","u":"%3Cinit%3E()"},{"p":"com.example.domain","c":"Bot","l":"Bot(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.example.domain","c":"Bot","l":"Bot(String, Bot.Strategy, int)","u":"%3Cinit%3E(java.lang.String,com.example.domain.Bot.Strategy,int)"},{"p":"com.example.domain","c":"Game","l":"checkWin(Bot)","u":"checkWin(com.example.domain.Bot)"},{"p":"com.example.domain","c":"Pair","l":"compareTo(Pair<T>)","u":"compareTo(com.example.domain.Pair)"},{"p":"com.example.structures.implementation.queue","c":"LinkedQueue","l":"copyLinkedQueue()"},{"p":"com.example.structures.adt","c":"QueueADT","l":"dequeue()"},{"p":"com.example.structures.implementation.queue","c":"LinkedQueue","l":"dequeue()"},{"p":"com.example.structures.implementation.network","c":"Graph","l":"downloadAdjencyMatrix()"},{"p":"com.example.structures.implementation.network","c":"Network","l":"downloadAdjencyMatrixWithWeights()"},{"p":"com.example.structures.exceptions","c":"ElementNotFoundException","l":"ElementNotFoundException()","u":"%3Cinit%3E()"},{"p":"com.example.structures.exceptions","c":"ElementNotFoundException","l":"ElementNotFoundException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.example.structures.exceptions","c":"EmptyListException","l":"EmptyListException()","u":"%3Cinit%3E()"},{"p":"com.example.structures.exceptions","c":"EmptyListException","l":"EmptyListException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.example.usecases.exceptions","c":"EmptyMapException","l":"EmptyMapException()","u":"%3Cinit%3E()"},{"p":"com.example.domain.exceptions","c":"EmptyMapExcpetion","l":"EmptyMapExcpetion()","u":"%3Cinit%3E()"},{"p":"com.example.structures.adt","c":"QueueADT","l":"enqueue(T)"},{"p":"com.example.structures.implementation.queue","c":"LinkedQueue","l":"enqueue(T)"},{"p":"com.example.usecases","c":"GenerateKickOffPlayerUseCase","l":"execute()"},{"p":"com.example.usecases","c":"GenerateMapUseCase","l":"execute()"},{"p":"com.example.usecases","c":"LoadPreviousGameUseCase","l":"execute()"},{"p":"com.example.usecases","c":"MoveBotUseCase","l":"execute()"},{"p":"com.example.usecases","c":"SetPlayersUseCase","l":"execute()"},{"p":"com.example.usecases","c":"StartGameUseCase","l":"execute()"},{"p":"com.example.usecases","c":"SetFlagLocationUseCase","l":"execute(Player)","u":"execute(com.example.domain.Player)"},{"p":"com.example.usecases","c":"SetPlayerBotsStrategyUseCase","l":"execute(Player)","u":"execute(com.example.domain.Player)"},{"p":"com.example.usecases","c":"SetPlayerBotsUseCase","l":"execute(Player, int)","u":"execute(com.example.domain.Player,int)"},{"p":"com.example.structures.implementation.network","c":"Graph","l":"findVertexIndex(T)"},{"p":"com.example.structures.adt","c":"ListADT","l":"first()"},{"p":"com.example.structures.adt","c":"QueueADT","l":"first()"},{"p":"com.example.structures.implementation.list","c":"ArrayList","l":"first()"},{"p":"com.example.structures.implementation.queue","c":"LinkedQueue","l":"first()"},{"p":"com.example.structures.implementation.list","c":"ArrayList","l":"front"},{"p":"com.example.configs","c":"Properties","l":"GAME_FILE_PATH"},{"p":"com.example.domain","c":"Game","l":"Game()","u":"%3Cinit%3E()"},{"p":"com.example.domain","c":"Game","l":"Game(GameMap)","u":"%3Cinit%3E(com.example.domain.GameMap)"},{"p":"com.example.domain","c":"GameMap","l":"GameMap(int, double)","u":"%3Cinit%3E(int,double)"},{"p":"com.example.usecases","c":"GenerateKickOffPlayerUseCase","l":"GenerateKickOffPlayerUseCase(Game, RandomnessADT)","u":"%3Cinit%3E(com.example.domain.Game,com.example.utils.RandomnessADT)"},{"p":"com.example.usecases","c":"GenerateMapUseCase","l":"GenerateMapUseCase(Game, RandomnessADT, ScannersADT)","u":"%3Cinit%3E(com.example.domain.Game,com.example.utils.RandomnessADT,com.example.utils.ScannersADT)"},{"p":"com.example.domain","c":"Bot","l":"getBotName()"},{"p":"com.example.domain","c":"Player","l":"getBotToPlay()"},{"p":"com.example.domain","c":"Bot","l":"getCurrentPosition()"},{"p":"com.example.domain","c":"GameMap","l":"getEdgeDensity()"},{"p":"com.example.structures.implementation","c":"LinearNode","l":"getElement()"},{"p":"com.example.structures.implementation.list","c":"UnorderedList","l":"getElement(int)"},{"p":"com.example.structures.adt","c":"ListADT","l":"getElement(T)"},{"p":"com.example.structures.implementation.list","c":"UnorderedList","l":"getElement(T)"},{"p":"com.example.domain","c":"Pair","l":"getFirstValue()"},{"p":"com.example.domain","c":"Player","l":"getFlag()"},{"p":"com.example.domain","c":"Game","l":"getGameMap()"},{"p":"com.example.utils","c":"Scanners","l":"getInputDouble(String)","u":"getInputDouble(java.lang.String)"},{"p":"com.example.utils","c":"ScannersADT","l":"getInputDouble(String)","u":"getInputDouble(java.lang.String)"},{"p":"com.example.utils","c":"Scanners","l":"getInputInt(String)","u":"getInputInt(java.lang.String)"},{"p":"com.example.utils","c":"ScannersADT","l":"getInputInt(String)","u":"getInputInt(java.lang.String)"},{"p":"com.example.utils","c":"Scanners","l":"getInputString(String)","u":"getInputString(java.lang.String)"},{"p":"com.example.utils","c":"ScannersADT","l":"getInputString(String)","u":"getInputString(java.lang.String)"},{"p":"com.example.structures.implementation.network","c":"Network","l":"getNeighbors(int)"},{"p":"com.example.structures.implementation","c":"LinearNode","l":"getNext()"},{"p":"com.example.domain","c":"GameMap","l":"getNumberOfLocations()"},{"p":"com.example.domain","c":"Player","l":"getPlayerBots()"},{"p":"com.example.domain","c":"Player","l":"getPlayerName()"},{"p":"com.example.domain","c":"Game","l":"getPlayers()"},{"p":"com.example.domain","c":"Game","l":"getPlayerTurn()"},{"p":"com.example.utils","c":"Randomness","l":"getRandomNumber(int, int)","u":"getRandomNumber(int,int)"},{"p":"com.example.utils","c":"RandomnessADT","l":"getRandomNumber(int, int)","u":"getRandomNumber(int,int)"},{"p":"com.example.utils","c":"Randomness","l":"getRandomWithoutDuplicates(int, int, int[])","u":"getRandomWithoutDuplicates(int,int,int[])"},{"p":"com.example.utils","c":"RandomnessADT","l":"getRandomWithoutDuplicates(int, int, int[])","u":"getRandomWithoutDuplicates(int,int,int[])"},{"p":"com.example.domain","c":"Pair","l":"getSecondValue()"},{"p":"com.example.domain","c":"Bot","l":"getStrategy()"},{"p":"com.example.structures.implementation.network","c":"Graph","l":"getVertex()"},{"p":"com.example.structures.implementation.network","c":"Graph","l":"Graph(int)","u":"%3Cinit%3E(int)"},{"p":"com.example.structures.implementation.network","c":"Graph","l":"hasEdge(T, T)","u":"hasEdge(T,T)"},{"p":"com.example.structures.implementation.list","c":"ArrayList.BaseIterator","l":"hasNext()"},{"p":"com.example.structures.implementation.list","c":"ArrayList","l":"increaseListCapacity()"},{"p":"com.example.domain.exceptions","c":"InvalidStrategyException","l":"InvalidStrategyException()","u":"%3Cinit%3E()"},{"p":"com.example.domain.exceptions","c":"InvalidStrategyException","l":"InvalidStrategyException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.example.structures.implementation.network.exceptions","c":"InvalidValueException","l":"InvalidValueException()","u":"%3Cinit%3E()"},{"p":"com.example.structures.implementation.network.exceptions","c":"InvalidValueException","l":"InvalidValueException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.example.structures.adt","c":"GraphADT","l":"isConnected()"},{"p":"com.example.structures.implementation.network","c":"Graph","l":"isConnected()"},{"p":"com.example.structures.adt","c":"GraphADT","l":"isEmpty()"},{"p":"com.example.structures.adt","c":"ListADT","l":"isEmpty()"},{"p":"com.example.structures.adt","c":"QueueADT","l":"isEmpty()"},{"p":"com.example.structures.adt","c":"StackADT","l":"isEmpty()"},{"p":"com.example.structures.implementation.list","c":"ArrayList","l":"isEmpty()"},{"p":"com.example.structures.implementation.network","c":"Graph","l":"isEmpty()"},{"p":"com.example.structures.implementation.queue","c":"LinkedQueue","l":"isEmpty()"},{"p":"com.example.structures.implementation.stack","c":"LinkedStack","l":"isEmpty()"},{"p":"com.example.domain","c":"Game","l":"isPositionTaken(int)"},{"p":"com.example.domain","c":"Game","l":"isValidPosition(int)"},{"p":"com.example.domain","c":"GameMap","l":"isValidPosition(int)"},{"p":"com.example.domain","c":"Game","l":"isValidPositionWithEdge(int, int)","u":"isValidPositionWithEdge(int,int)"},{"p":"com.example.domain","c":"GameMap","l":"isValidPositionWithEdge(int, int)","u":"isValidPositionWithEdge(int,int)"},{"p":"com.example.structures.adt","c":"ListADT","l":"iterator()"},{"p":"com.example.structures.implementation.list","c":"ArrayList","l":"iterator()"},{"p":"com.example.structures.adt","c":"GraphADT","l":"iteratorBFS(T)"},{"p":"com.example.structures.implementation.network","c":"Graph","l":"iteratorBFS(T)"},{"p":"com.example.structures.adt","c":"GraphADT","l":"iteratorDFS(T)"},{"p":"com.example.structures.implementation.network","c":"Graph","l":"iteratorDFS(T)"},{"p":"com.example.structures.implementation.network","c":"Graph","l":"iteratorShortestPath(int, int)","u":"iteratorShortestPath(int,int)"},{"p":"com.example.structures.adt","c":"GraphADT","l":"iteratorShortestPath(T, T)","u":"iteratorShortestPath(T,T)"},{"p":"com.example.structures.implementation.network","c":"Graph","l":"iteratorShortestPath(T, T)","u":"iteratorShortestPath(T,T)"},{"p":"com.example.utils","c":"JSON","l":"JSON()","u":"%3Cinit%3E()"},{"p":"com.example.structures.adt","c":"ListADT","l":"last()"},{"p":"com.example.structures.implementation.list","c":"ArrayList","l":"last()"},{"p":"com.example.structures.implementation","c":"LinearNode","l":"LinearNode()","u":"%3Cinit%3E()"},{"p":"com.example.structures.implementation","c":"LinearNode","l":"LinearNode(T)","u":"%3Cinit%3E(T)"},{"p":"com.example.structures.implementation.queue","c":"LinkedQueue","l":"LinkedQueue()","u":"%3Cinit%3E()"},{"p":"com.example.structures.implementation.queue","c":"LinkedQueue","l":"LinkedQueue(T)","u":"%3Cinit%3E(T)"},{"p":"com.example.structures.implementation.stack","c":"LinkedStack","l":"LinkedStack()","u":"%3Cinit%3E()"},{"p":"com.example.structures.implementation.stack","c":"LinkedStack","l":"LinkedStack(T)","u":"%3Cinit%3E(T)"},{"p":"com.example.structures.implementation.list","c":"ArrayList","l":"list"},{"p":"com.example.configs","c":"Properties","l":"LIST_DEFAULT_SIZE"},{"p":"com.example.structures.implementation.list","c":"ArrayList","l":"listContains(T)"},{"p":"com.example.utils","c":"JSON","l":"loadMap()"},{"p":"com.example.utils","c":"JSON","l":"loadPlayers()"},{"p":"com.example.usecases","c":"LoadPreviousGameUseCase","l":"LoadPreviousGameUseCase(Game)","u":"%3Cinit%3E(com.example.domain.Game)"},{"p":"com.example","c":"App","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"com.example.configs","c":"Properties","l":"MAX_DISTANCE_BETWEEN_VERTEXES"},{"p":"com.example.configs","c":"Properties","l":"MAX_PLAYERS"},{"p":"com.example.utils","c":"Menu","l":"Menu()","u":"%3Cinit%3E()"},{"p":"com.example.structures.implementation.list","c":"ArrayList","l":"modCount"},{"p":"com.example.domain","c":"Bot","l":"moveAvoidingObstacles(Game)","u":"moveAvoidingObstacles(com.example.domain.Game)"},{"p":"com.example.usecases","c":"MoveBotUseCase","l":"MoveBotUseCase(Game, ScannersADT)","u":"%3Cinit%3E(com.example.domain.Game,com.example.utils.ScannersADT)"},{"p":"com.example.domain","c":"Bot","l":"moveByShortestPath(GameMap, int)","u":"moveByShortestPath(com.example.domain.GameMap,int)"},{"p":"com.example.domain","c":"Bot","l":"moveRandomly(GameMap, RandomnessADT)","u":"moveRandomly(com.example.domain.GameMap,com.example.utils.RandomnessADT)"},{"p":"com.example.structures.implementation.network","c":"Network","l":"Network(int)","u":"%3Cinit%3E(int)"},{"p":"com.example.structures.implementation.list","c":"ArrayList.BaseIterator","l":"next()"},{"p":"com.example.structures.implementation.network","c":"Graph","l":"numberOfEdges()"},{"p":"com.example.domain","c":"Pair","l":"Pair(T, T)","u":"%3Cinit%3E(T,T)"},{"p":"com.example.domain","c":"Bot","l":"parseToJson()"},{"p":"com.example.domain","c":"Player","l":"parseToJson()"},{"p":"com.example.structures.adt","c":"StackADT","l":"peek()"},{"p":"com.example.structures.implementation.stack","c":"LinkedStack","l":"peek()"},{"p":"com.example.domain","c":"Player","l":"Player(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"com.example.structures.adt","c":"StackADT","l":"pop()"},{"p":"com.example.structures.implementation.stack","c":"LinkedStack","l":"pop()"},{"p":"com.example.structures.implementation.network","c":"Graph","l":"printAdjencyMatrix()"},{"p":"com.example.structures.implementation.network","c":"Network","l":"printAdjencyMatrixWithWeights()"},{"p":"com.example.configs","c":"Properties","l":"Properties()","u":"%3Cinit%3E()"},{"p":"com.example.structures.adt","c":"StackADT","l":"push(T)"},{"p":"com.example.structures.implementation.stack","c":"LinkedStack","l":"push(T)"},{"p":"com.example.domain","c":"Bot.Strategy","l":"Random"},{"p":"com.example.utils","c":"Randomness","l":"Randomness()","u":"%3Cinit%3E()"},{"p":"com.example.structures.implementation.list","c":"ArrayList","l":"rear"},{"p":"com.example.structures.adt","c":"ListADT","l":"remove(T)"},{"p":"com.example.structures.implementation.list","c":"ArrayList","l":"remove(T)"},{"p":"com.example.structures.adt","c":"GraphADT","l":"removeEdge(T, T)","u":"removeEdge(T,T)"},{"p":"com.example.structures.implementation.network","c":"Graph","l":"removeEdge(T, T)","u":"removeEdge(T,T)"},{"p":"com.example.structures.adt","c":"ListADT","l":"removeFirst()"},{"p":"com.example.structures.implementation.list","c":"ArrayList","l":"removeFirst()"},{"p":"com.example.structures.adt","c":"ListADT","l":"removeLast()"},{"p":"com.example.structures.implementation.list","c":"ArrayList","l":"removeLast()"},{"p":"com.example.structures.adt","c":"GraphADT","l":"removeVertex(T)"},{"p":"com.example.structures.implementation.network","c":"Graph","l":"removeVertex(T)"},{"p":"com.example.utils","c":"JSON","l":"saveGame(Game)","u":"saveGame(com.example.domain.Game)"},{"p":"com.example.utils","c":"Scanners","l":"Scanners()","u":"%3Cinit%3E()"},{"p":"com.example.domain","c":"GameMap","l":"seeMap()"},{"p":"com.example.domain","c":"GameMap","l":"seeVertex()"},{"p":"com.example.domain","c":"Bot","l":"setBotName(String)","u":"setBotName(java.lang.String)"},{"p":"com.example.domain","c":"Bot","l":"setCurrentPosition(int)"},{"p":"com.example.domain","c":"GameMap","l":"setEdgeDensity(double)"},{"p":"com.example.structures.implementation","c":"LinearNode","l":"setElement(T)"},{"p":"com.example.domain","c":"Pair","l":"setFirstValue(T)"},{"p":"com.example.domain","c":"Player","l":"setFlag(int)"},{"p":"com.example.usecases","c":"SetFlagLocationUseCase","l":"SetFlagLocationUseCase(Game, ScannersADT)","u":"%3Cinit%3E(com.example.domain.Game,com.example.utils.ScannersADT)"},{"p":"com.example.domain","c":"Game","l":"setGameMap(GameMap)","u":"setGameMap(com.example.domain.GameMap)"},{"p":"com.example.structures.implementation","c":"LinearNode","l":"setNext(LinearNode<T>)","u":"setNext(com.example.structures.implementation.LinearNode)"},{"p":"com.example.usecases","c":"SetPlayerBotsStrategyUseCase","l":"SetPlayerBotsStrategyUseCase(Game, ScannersADT)","u":"%3Cinit%3E(com.example.domain.Game,com.example.utils.ScannersADT)"},{"p":"com.example.usecases","c":"SetPlayerBotsUseCase","l":"SetPlayerBotsUseCase(ScannersADT)","u":"%3Cinit%3E(com.example.utils.ScannersADT)"},{"p":"com.example.domain","c":"Player","l":"setPlayerName(String)","u":"setPlayerName(java.lang.String)"},{"p":"com.example.domain","c":"Game","l":"setPlayers(UnorderedList<Player>)","u":"setPlayers(com.example.structures.implementation.list.UnorderedList)"},{"p":"com.example.usecases","c":"SetPlayersUseCase","l":"SetPlayersUseCase(Game, SetFlagLocationUseCase, SetPlayerBotsUseCase, SetPlayerBotsStrategyUseCase, ScannersADT)","u":"%3Cinit%3E(com.example.domain.Game,com.example.usecases.SetFlagLocationUseCase,com.example.usecases.SetPlayerBotsUseCase,com.example.usecases.SetPlayerBotsStrategyUseCase,com.example.utils.ScannersADT)"},{"p":"com.example.domain","c":"Pair","l":"setSecondValue(T)"},{"p":"com.example.domain","c":"Bot","l":"setStrategy(Bot.Strategy)","u":"setStrategy(com.example.domain.Bot.Strategy)"},{"p":"com.example.domain","c":"Bot.Strategy","l":"Shortest_Path"},{"p":"com.example.structures.adt","c":"NetworkADT","l":"shortestPathWeight(T, T)","u":"shortestPathWeight(T,T)"},{"p":"com.example.structures.implementation.network","c":"Network","l":"shortestPathWeight(T, T)","u":"shortestPathWeight(T,T)"},{"p":"com.example.utils","c":"Menu","l":"showMainMenu()"},{"p":"com.example.structures.adt","c":"GraphADT","l":"size()"},{"p":"com.example.structures.adt","c":"ListADT","l":"size()"},{"p":"com.example.structures.adt","c":"QueueADT","l":"size()"},{"p":"com.example.structures.adt","c":"StackADT","l":"size()"},{"p":"com.example.structures.implementation.list","c":"ArrayList","l":"size()"},{"p":"com.example.structures.implementation.network","c":"Graph","l":"size()"},{"p":"com.example.structures.implementation.queue","c":"LinkedQueue","l":"size()"},{"p":"com.example.structures.implementation.stack","c":"LinkedStack","l":"size()"},{"p":"com.example.usecases","c":"StartGameUseCase","l":"StartGameUseCase(Game, GenerateKickOffPlayerUseCase, MoveBotUseCase)","u":"%3Cinit%3E(com.example.domain.Game,com.example.usecases.GenerateKickOffPlayerUseCase,com.example.usecases.MoveBotUseCase)"},{"p":"com.example.domain","c":"Bot","l":"toString()"},{"p":"com.example.domain","c":"Player","l":"toString()"},{"p":"com.example.structures.adt","c":"GraphADT","l":"toString()"},{"p":"com.example.structures.adt","c":"ListADT","l":"toString()"},{"p":"com.example.structures.adt","c":"QueueADT","l":"toString()"},{"p":"com.example.structures.adt","c":"StackADT","l":"toString()"},{"p":"com.example.structures.implementation.list","c":"UnorderedList","l":"toString()"},{"p":"com.example.structures.implementation.queue","c":"LinkedQueue","l":"toString()"},{"p":"com.example.structures.implementation.stack","c":"LinkedStack","l":"toString()"},{"p":"com.example.structures.implementation.list","c":"UnorderedList","l":"UnorderedList()","u":"%3Cinit%3E()"},{"p":"com.example.structures.implementation.list","c":"UnorderedList","l":"UnorderedList(int)","u":"%3Cinit%3E(int)"},{"p":"com.example.domain","c":"Bot.Strategy","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"com.example.domain","c":"Bot.Strategy","l":"values()"},{"p":"com.example.structures.implementation.network","c":"Graph","l":"vertex"}];updateSearchResults();